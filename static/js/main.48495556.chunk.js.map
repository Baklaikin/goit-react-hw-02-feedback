{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.module.css","components/Notification/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/FeedbackLogic/FeedbackLogic.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","className","s","negativeTitle","Statistics","good","neutral","bad","total","positiveFeedback","container","values","paragraph","FeedbackOptions","options","onLeaveFeedback","wrapper","map","option","type","name","button","onClick","e","item","target","toLowerCase","Section","title","children","Feedback","onButtonClick","setState","prevState","countTotalFeedback","state","countPositiveFeedbackPercentage","Math","floor","this","React","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.48495556.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Statistics_container__28xGv\",\"title\":\"Statistics_title__3i6uN\",\"values\":\"Statistics_values__cGSzV\",\"negativeTitle\":\"Statistics_negativeTitle__1NWBd\",\"paragraph\":\"Statistics_paragraph__1qmjP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2r5lb\",\"wrapper\":\"FeedbackOptions_wrapper__DgVpe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"negativeTitle\":\"Notification_negativeTitle__3aeSi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__3YGkR\"};","import s from \"components/Notification/Notification.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Notification({ message }) {\r\n  return <h2 className={s.negativeTitle}>{message}</h2>;\r\n}\r\n\r\nexport default Notification;\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import s from \"components/Statistics/Statistics.module.css\";\nimport Notification from \"components/Notification/Notification\";\nimport PropTypes from \"prop-types\";\n\nfunction Statistics({ good, neutral, bad, total, positiveFeedback }) {\n  const renderFeedback = () => {\n    return (\n      <>\n        <p className={s.paragraph}>Good: {good}</p>\n        <p className={s.paragraph}>Neutral: {neutral}</p>\n        <p className={s.paragraph}>Bad: {bad}</p>\n        <p className={s.paragraph}>Total: {total}</p>\n        <p className={s.paragraph}>Positive feedback: {positiveFeedback}%</p>\n      </>\n    );\n  };\n  return (\n    <div className={s.container}>\n      <div className={s.values}>\n        {total === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          renderFeedback()\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  // total: PropTypes.number,\n  positiveFeedback: PropTypes.number,\n};\n","import s from \"components/FeedbackOptions/FeedbackOptions.module.css\";\nimport PropTypes from \"prop-types\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <div className={s.wrapper}>\n      {options.map((option) => (\n        <button\n          key={option}\n          type=\"button\"\n          name={option}\n          className={s.button}\n          onClick={(e) => {\n            const item = e.target.name.toLowerCase();\n            onLeaveFeedback(item);\n          }}\n        >\n          {option}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default FeedbackOptions;\n\nFeedbackOptions.propTypes = {\n  key: PropTypes.string,\n  name: PropTypes.string,\n};\n","import s from \"components/Section/Section.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nexport default Section;\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\nimport Statistics from \"components/Statistics/Statistics\";\nimport FeedbackOptions from \"components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"components/Section/Section\";\n\nclass Feedback extends React.Component {\n  constructor({ options }) {\n    super();\n    this.state = {\n      good: 0,\n      neutral: 0,\n      bad: 0,\n    };\n    this.options = options;\n  }\n\n  onButtonClick = (item) => {\n    this.setState((prevState) => {\n      return { [item]: prevState[item] + 1 };\n    });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good, neutral, bad } = this.state;\n    const positive = Math.floor(\n      ((good + neutral) / (good + neutral + bad)) * 100\n    );\n    return positive;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={this.options}\n            state={this.state}\n            onLeaveFeedback={this.onButtonClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback()}\n            positiveFeedback={this.countPositiveFeedbackPercentage()}\n          />\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default Feedback;\n","import \"./App.css\";\r\nimport Feedback from \"components/FeedbackLogic/FeedbackLogic\";\r\nconst options = [\"Good\", \"Neutral\", \"Bad\"];\r\n\r\nfunction App() {\r\n  return <Feedback options={options} />;\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}